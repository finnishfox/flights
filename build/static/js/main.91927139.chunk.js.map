{"version":3,"sources":["components/Flights/Flights.reducers.js","components/Search/Search.reducers.js","store/index.js","components/Search/Search.js","components/Search/Search.selectors.js","components/Search/index.js","components/Search/Search.actions.js","components/Flights/Flights.js","components/Flights/Flights.selectors.js","components/Flights/index.js","components/Flights/Flights.actions.js","index.js","components/App/App.js"],"names":["defaultState","arrivals","departures","searchQuery","addons","applyMiddleware","thunk","reducers","combineReducers","flights","initialState","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","search","store","createStore","compose","apply","Search","state","event","preventDefault","searchQuerySet","_this","props","handleInput","keyCode","_this2","this","react_default","a","createElement","className","xmlns","viewBox","transform","width","height","fill","d","placeholder","onChange","setState","target","value","onKeyDown","onClick","React","Component","getSearchQuery","mapDispatchToProps","connect","Flights","currentTab","currentDate","moment","removingRow","labels","city","time","loadFlights","date","getFlightsList","format","getTime","changeCurrentTab","tab","sendNotification","_callee","flight","now","duration","minutesBeforeReminder","regenerator_default","wrap","_context","prev","next","Notification","requestPermission","sent","diff","subtract","as","setTimeout","body","stop","isMoreThanThreeHoursBeforeFlight","showFlights","_this$props","filter","timeDepExpectCalc","isSame","sort","b","isBefore","isAfter","timeToStand","reg","RegExp","filteredFlights","flightNumbers","codeShareData","map","element","codeShare","test","Date","status","timeTakeofFact","timeLandFact","airlines","airline","en","name","key","ID","term","uuidv1","flightNum","gateNo","removeRow","addRow","changeDate","yesterday","tomorrow","add","version","stroke","strokeWidth","fillRule","id","scope","getArrivals","getDepartures","_ref","asyncToGenerator","mark","dispatch","result","axios","get","data","arrival","departure","_x","ReactDOM","render","es","components_Search","components_Flights","document","getElementById"],"mappings":"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","file":"static/js/main.91927139.chunk.js","sourcesContent":["export const defaultState = {\n    arrivals: [],\n    departures: []\n};\n\nexport default function flights(initialState = defaultState, action) {\n    switch (action.type) {\n        case \"FLIGHTS_LOADED\":\n            return {\n                arrivals: [\n                    ...initialState.arrivals,\n                    ...action.payload.arrivals\n                ],\n                departures: [\n                    ...initialState.departures,\n                    ...action.payload.departures\n                ],\n            };\n        default:\n            return initialState;\n    }\n}","export const defaultState = {\n    searchQuery: ''\n};\n\nexport default function search(initialState = defaultState, action) {\n    switch (action.type) {\n        case \"SEARCH_QUERY_SET\":\n            return {\n                searchQuery: action.payload.searchQuery\n            };\n        default:\n            return initialState;\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport flights from '../components/Flights/Flights.reducers';\nimport search from '../components/Search/Search.reducers';\n\nimport {combineReducers} from 'redux';\n\nconst addons = [applyMiddleware(thunk)\n];\n\nconst reducers = combineReducers({\n    flights,\n    search\n});\n\n\nconst store = createStore(\n    reducers,\n    compose(...addons),\n);\n\nexport default store;","import React from \"react\";\nimport './Search.scss';\n\nclass Search extends React.Component {\n    state = {searchQuery: ''};\n\n    search = (event) => {\n        event.preventDefault();\n        const {searchQuerySet} = this.props;\n        searchQuerySet({searchQuery: this.state.searchQuery});\n    };\n\n    handleInput = (event) => {\n        if (event.keyCode === 13) {\n            this.search(event);\n        }\n    };\n\n    render() {\n        return (\n            <article className=\"Search\">\n                <h2 className=\"Search__title\">SEARCH FLIGHT</h2>\n                <form className=\"Search__form\">\n                    <label className=\"Search__field\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\"\n                             viewBox=\"-512.053 29 44 43\"\n                             className=\"Search__icon\">\n                            <g transform=\"translate(-512.053 29)\">\n                                <rect width=\"44\"\n                                      height=\"43\"\n                                      fill=\"none\"></rect>\n                                <path\n                                    d=\"M317.717,70.708H316.25l-.55-.538a11.072,11.072,0,0,0,2.933-7.525,11.92,11.92,0,1,0-11.917,11.646,11.628,11.628,0,0,0,7.7-2.867l.55.538V73.4l9.167,8.958,2.75-2.687Zm-11,0a8.065,8.065,0,1,1,8.25-8.063A8.124,8.124,0,0,1,306.717,70.708Z\"\n                                    transform=\"translate(-289.3 -45.625)\"\n                                    fill=\"#95989A\"></path>\n                            </g>\n                        </svg>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Destination or flight #\"\n                            className=\"Search__input\"\n                            onChange={(event) => this.setState({searchQuery: event.target.value})}\n                            onKeyDown={(event) => this.handleInput(event)}/>\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"Search__submit-button\"\n                        onClick={(event) => this.search(event)}>\n                        Search\n                    </button>\n                </form>\n            </article>\n        );\n    }\n}\n\nexport default Search;","export const getSearchQuery = state => (state.searchQuery);\n","import Search from \"./Search\";\nimport {connect} from 'react-redux';\nimport {getSearchQuery} from \"./Search.selectors\";\nimport {searchQuerySet} from \"./Search.actions\";\n\nconst mapStateToProps = state => ({\n    searchQuery: getSearchQuery(state),\n});\n\nconst mapDispatchToProps = {\n    searchQuerySet,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","export const searchQuerySet = payload => ({\n    type: 'SEARCH_QUERY_SET',\n    payload,\n});\n","import React from \"react\";\nimport './Flights.scss';\nimport moment from \"moment\";\nimport uuidv1 from 'uuid/v1';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nclass Flights extends React.Component {\n\n    state = {currentTab: 'departures', currentDate: moment(), removingRow: false};\n\n    labels = {\n        departures: {\n            city: 'airportToID.city_en',\n            time: 'timeDepExpectCalc'\n        },\n        arrivals: {\n            city: 'airportFromID.city_en',\n            time: 'timeToStand'\n        },\n    };\n\n\n    componentDidMount() {\n        this.loadFlights(moment());\n        // setInterval(()=> {\n        //     switch(this.state.jopa){\n        //         case 'burger':\n        //             this.setState({\n        //                 jopa: ''\n        //             });\n        //             break;\n        //         default:\n        //             this.setState({\n        //                 jopa: 'burger'\n        //             });\n        //             break;\n        //     }\n        // },2000);\n    }\n\n    loadFlights = (date) => {\n        const {getFlightsList} = this.props;\n        getFlightsList(date.format('DD-MM-YYYY'));\n\n    };\n\n    getTime = (date) => {\n        return moment(date).format(\"H:mm\");\n    };\n\n    changeCurrentTab = (tab) => {\n        this.setState({currentTab: tab});\n\n    };\n\n    sendNotification = async (flight) => {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n            const now = moment();\n            const time = moment(flight[this.labels[this.state.currentTab].time]);\n            let duration = moment.duration(time.diff(now));\n            const minutesBeforeReminder = duration.subtract(moment.duration(3, 'hours')).as('minutes');\n            const msBeforeReminder = minutesBeforeReminder * 60 * 1000;\n            setTimeout(() => new Notification('Taxi reminder', {\n                body: \"3 hours before flight. Time to order a taxi!\",\n            }), msBeforeReminder)\n        }\n    };\n\n    isMoreThanThreeHoursBeforeFlight = (flight) => {\n        const now = moment();\n        const time = moment(flight[this.labels[this.state.currentTab].time]);\n        let duration = moment.duration(time.diff(now));\n        return duration.as('hours') > 3;\n    };\n\n    showFlights = () => {\n        const {departures, arrivals, searchQuery} = this.props;\n        let flights = [];\n        if (this.state.currentTab === 'departures') {\n            flights = departures;\n            flights = flights\n                .filter(flight => moment(flight.timeDepExpectCalc).isSame(moment(this.state.currentDate), 'day'))\n                .sort((a, b) => {\n                    if (moment(a.timeDepExpectCalc).isBefore(moment(b.timeDepExpectCalc))) {\n                        return -1;\n                    } else if (moment(a.timeDepExpectCalc).isAfter(moment(b.timeDepExpectCalc))) {\n                        return 1;\n                    }\n                    return 0;\n                })\n        } else {\n            flights = arrivals;\n            flights = flights\n                .filter(flight => moment(flight.timeToStand).isSame(moment(this.state.currentDate), 'day'))\n                .sort((a, b) => {\n                    if (moment(a.timeToStand).isBefore(moment(b.timeToStand))) {\n                        return -1;\n                    } else if (moment(a.timeToStand).isAfter(moment(b.timeToStand))) {\n                        return 1;\n                    }\n                    return 0;\n                })\n        }\n\n        if (searchQuery !== '') {\n            const reg = new RegExp(searchQuery, 'ig');\n            let filteredFlights = flights.filter(flight => {\n                const flightNumbers = flight.codeShareData.map(element => element.codeShare);\n                return reg.test(flightNumbers);\n            });\n            if (filteredFlights.length === 0) {\n                filteredFlights = flights.filter(flight => {\n                    return reg.test(flight[this.labels[this.state.currentTab].city]);\n                });\n            }\n            flights = filteredFlights;\n        }\n        return flights\n            .map(flight => {\n                const date = new Date(flight[this.labels[this.state.currentTab].time]);\n                const city = flight[this.labels[this.state.currentTab].city];\n                let status = '';\n                switch (flight.status) {\n                    case 'DP':\n                        status = `Departed at ${this.getTime(new Date(flight.timeTakeofFact))}`;\n                        break;\n                    case 'ON':\n                        status = 'On time';\n                        break;\n                    case 'CK':\n                        status = 'Check-in';\n                        break;\n                    case 'LN':\n                        status = `Landed at ${this.getTime(new Date(flight.timeLandFact))}`;\n                        break;\n                    case 'BD':\n                        status = 'Boarding';\n                        break;\n                    case 'GC':\n                        status = 'Gate closed';\n                        break;\n                    case 'FR':\n                        status = 'In flight';\n                        break;\n                    default:\n                        status = '';\n                        break;\n                }\n                const airlines = flight.codeShareData.map(airline => airline.airline.en.name);\n                const flightNumbers = flight.codeShareData.map(element => element.codeShare);\n                return (\n                    <tr key={flight.ID} className='Flights__table-row'>\n                        <td className={flight.term === 'A' ? 'Flights__terminal' : 'Flights__terminal Flights__terminal--blue'}>\n                            {flight.term}\n                        </td>\n                        <td className=\"Flights__data Flights__time\">{this.getTime(date)}</td>\n                        <td className=\"Flights__data Flights__city\">{city}</td>\n                        <td className=\"Flights__data Flights__status\">{status}</td>\n                        {<td className=\"Flights__data Flights__airlines\">\n                            <ul>\n                                {airlines.map(airline => <li key={uuidv1()}>{airline}</li>)}\n                            </ul>\n                        </td>}\n                        {<td className=\"Flights__data Flights__flight-number-field\">\n                            <ul>\n                                {flightNumbers.map(flightNum =>\n                                    <li\n                                        className=\"Flights__flight-number\"\n                                        key={uuidv1()}>{flightNum}\n                                    </li>)}\n                            </ul>\n                        </td>}\n                        <td className=\"Flights__data Flights__gate\">{flight.gateNo}</td>\n                        <td className=\"Flights__data Flights__reminder\">\n                            <button\n                                className={this.isMoreThanThreeHoursBeforeFlight(flight) ? \"Flights__reminder-button\" : \"Flights__reminder-button Flights__reminder-button--hidden\"}\n                                onClick={() => this.sendNotification(flight)}>Taxi reminder\n                            </button>\n                        </td>\n                    </tr>)\n            });\n    };\n\n    removeRow = (date) => {\n        setTimeout(() => this.addRow(date), 1000);\n    };\n\n    addRow = (date) => {\n        this.setState({currentDate: date, removingRow: false});\n    };\n\n    changeDate = (date) => {\n        if(!moment(date).isSame(moment(this.state.currentDate),'day')){\n            this.setState({removingRow: true},\n                this.removeRow(date));\n        }\n    };\n\n\n    render() {\n        const yesterday = moment().subtract(1, 'days');\n        const tomorrow = moment().add(1, 'days');\n        return (\n            <article className=\"Flights\">\n                <nav className=\"Flights__tabs\">\n                    <button\n                        className={this.state.currentTab === 'departures' ? 'Flights__button Flights__button--active' : 'Flights__button'}\n                        onClick={() => this.changeCurrentTab('departures')}>\n                        <svg className=\"Flights__departure-icon\"\n                             viewBox=\"0 0 40 28\"\n                             version=\"1.1\"\n                             xmlns=\"http://www.w3.org/2000/svg\">\n                            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                <g transform=\"translate(-1.000000, -1.000000)\" fill=\"#FFFFFF\" fillRule=\"nonzero\"\n                                   className=\"Flights__plane-icon\">\n                                    <g>\n                                        <path\n                                            d=\"M40.9190312,14.2925525 C40.731055,13.5210761 40.2396434,12.8581323 39.5561585,12.4539552 C38.8726735,12.0497781 38.0549837,11.9385881 37.2883912,12.1455827 L26.8096581,15.0218819 L13.1945082,2 L9.38678826,3.03046545 L17.5564785,17.5510243 L7.75204986,20.2442408 L3.86129243,17.1278331 L1,17.9171897 L4.59162231,24.3200818 L6.11030829,27.0112974 L9.26373268,26.1409043 L19.7414654,23.2656055 L28.3253427,20.9165445 L38.8070772,18.0372439 C40.4055057,17.5625364 41.3397513,15.9060318 40.9190312,14.2925525 Z\"\n                                            transform=\"translate(21.009879, 14.505649) rotate(-4.012171) translate(-21.009879, -14.505649) \"></path>\n                                    </g>\n                                </g>\n                            </g>\n                        </svg>\n                        Departures\n                    </button>\n                    <button\n                        className={this.state.currentTab === 'arrivals' ? 'Flights__button Flights__button--active' : 'Flights__button'}\n                        onClick={() => this.changeCurrentTab('arrivals')}>\n                        <svg className=\"Flights__departure-icon\"\n                             viewBox=\"0 0 40 28\"\n                             version=\"1.1\"\n                             xmlns=\"http://www.w3.org/2000/svg\">\n                            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                <g transform=\"translate(-1.000000, -4.000000)\" fill=\"#FFFFFF\" fillRule=\"nonzero\"\n                                   className=\"Flights__plane-icon\">\n                                    <g>\n                                        <path\n                                            d=\"M43.8940167,20.2848496 C43.7061583,19.5138567 43.2150547,18.8513283 42.531998,18.4474045 C41.8489414,18.0434806 41.031764,17.9323603 40.2656518,18.1392252 L29.793485,21.013722 L16.1868667,8 L12.3815328,9.02981973 L20.5461037,23.5412796 L10.7478188,26.2328084 L6.85949946,23.1183536 L4,23.9072155 L7.5893717,30.3060954 L9.10710602,32.9956246 L12.2585544,32.1257769 L22.7297214,29.2522799 L31.3082198,26.9046908 L41.7833862,24.0271945 C43.3808131,23.5527844 44.3144732,21.8973179 43.8940167,20.2848496 Z\"\n                                            transform=\"translate(23.997341, 20.497812) rotate(27.974730) translate(-23.997341, -20.497812) \"></path>\n                                    </g>\n                                </g>\n                            </g>\n                        </svg>\n\n                        Arrivals\n                    </button>\n                </nav>\n                <nav className=\"Flights__dates-navigation\">\n                    <div className=\"Flights__calendar\">\n                        <p className=\"Flights__current-date\">{moment(this.state.currentDate).format('DD/MM')}</p>\n                        <div className=\"Flights__calendar-wrapper\">\n                            <svg className=\"Flights__calendar-icon\"\n                                 viewBox=\"0 0 96 86\" version=\"1.1\"\n                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                    <g id=\"calendar\" fill=\"#ffffff\" fillRule=\"nonzero\">\n                                        <path\n                                            d=\"M85.5,7.4 L75.5,7.4 L75.5,11.4 C75.5,14.9 72.6,17.8 69.1,17.8 C65.6,17.8 62.7,15 62.7,11.4 L62.7,7.4 L33.2,7.4 L33.2,11.4 C33.2,14.9 30.4,17.8 26.8,17.8 C23.3,17.8 20.4,15 20.4,11.4 L20.4,7.4 L10.4,7.4 C4.9,7.4 0.4,11.9 0.4,17.4 L0.4,75.6 C0.4,81.1 4.9,85.6 10.4,85.6 L85.4,85.6 C90.9,85.6 95.4,81.1 95.4,75.6 L95.4,17.4 C95.5,11.9 91,7.4 85.5,7.4 Z M90,75.6 C90,78.1 88,80.1 85.5,80.1 L10.5,80.1 C8,80.1 6,78.1 6,75.6 L6,29.3 L90,29.3 L90,75.6 Z\"\n                                            id=\"Shape\"></path>\n                                        <path\n                                            d=\"M26.9,14.2 C28.4,14.2 29.6,13 29.6,11.5 L29.6,3.2 C29.6,1.7 28.4,0.5 26.9,0.5 C25.4,0.5 24.2,1.7 24.2,3.2 L24.2,11.5 C24.1,13 25.4,14.2 26.9,14.2 Z\"\n                                            id=\"Shape\"></path>\n                                        <path\n                                            d=\"M69.1,14.2 C70.6,14.2 71.8,13 71.8,11.5 L71.8,3.2 C71.8,1.7 70.6,0.5 69.1,0.5 C67.6,0.5 66.4,1.7 66.4,3.2 L66.4,11.5 C66.4,13 67.6,14.2 69.1,14.2 Z\"\n                                            id=\"Shape\"></path>\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n                    </div>\n                    <div className=\"Flights__navigation-wrapper\">\n                        <button className=\"Flights__change-date-button\"\n                                onClick={() => this.changeDate(yesterday)}>\n                            <span className=\"Flights__date-text\">{yesterday.format('DD/MM')}</span>\n                            Yesterday\n                        </button>\n                        <button className=\"Flights__change-date-button\"\n                                onClick={() => this.changeDate(moment())}>\n                            <span className=\"Flights__date-text\">{moment().format('DD/MM')}</span>\n                            Today\n                        </button>\n                        <button className=\"Flights__change-date-button\"\n                                onClick={() => this.changeDate(tomorrow)}>\n                            <span className=\"Flights__date-text\">{tomorrow.format('DD/MM')}</span>\n                            Tomorrow\n                        </button>\n                    </div>\n                </nav>\n                <table className='Flights__table'>\n                    <thead className=\"Flights__thead\">\n                    <tr>\n                        <th scope=\"col\" className=\"Flights__table-header\">Terminal</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Time</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Destination</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Status</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Airline</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Flight</th>\n                        <th scope=\"col\" className=\"Flights__table-header\">Gate</th>\n                        <th scope=\"col\" className=\"Flights__table-header\"/>\n                    </tr>\n                    </thead>\n                    <tbody\n                        className={this.state.removingRow ? 'Flights__tbody Flights__tbody--removing' : 'Flights__tbody'}>\n                    {this.showFlights()}\n                    </tbody>\n                </table>\n            </article>\n        );\n    }\n}\n\nexport default Flights;","export const getArrivals = state => (state.flights.arrivals);\nexport const getDepartures = state => (state.flights.departures);\nexport const getSearchQuery = state => (state.search.searchQuery);\n","import Flights from \"./Flights\";\nimport {connect} from 'react-redux';\nimport {getArrivals, getDepartures, getSearchQuery} from \"./Flights.selectors\";\nimport {getFlightsList} from \"./Flights.actions\";\n\nconst mapStateToProps = state => ({\n    arrivals: getArrivals(state),\n    departures: getDepartures(state),\n    searchQuery: getSearchQuery(state)\n});\n\nconst mapDispatchToProps = {\n    getFlightsList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flights);","import axios from 'axios';\n\nexport const flightsLoaded = payload => ({\n    type: 'FLIGHTS_LOADED',\n    payload,\n});\n\nexport const getFlightsList = (date) => async dispatch => {\n    const result = await axios.get(`https://api.iev.aero/api/flights/${date}`);\n\n    const arrivals = result.data.body.arrival;\n    const departures = result.data.body.departure;\n\n    const action = flightsLoaded({arrivals: arrivals, departures: departures});\n    dispatch(action);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App/App\";\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from '../../store';\nimport Search from \"../Search\";\nimport 'reset-css';\nimport './App.scss';\nimport Flights from \"../Flights\";\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <main className=\"App__content\">\n                    <Search/>\n                    <Flights/>\n                </main>\n            </Provider>\n        </div>\n    );\n}\n\n"],"sourceRoot":""}